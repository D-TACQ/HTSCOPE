# <diamond> feedback http://www.aps.anl.gov/epics/tech-talk/2010/msg00131.php
# FOO   : setpoint
# FOO:r : readback
# FOO:s : sync
# FOO:w : write


record(bo, "$(PFX)$(UUT):REFRESH") {
	field(DTYP, "Soft Channel")
	field(FLNK, "$(PFX)$(UUT):REFRESH:w PP")
	field(ZNAM, "0")
	field(ONAM, "1")
}


record(bo, "$(PFX)$(UUT):REFRESH:w") {
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PFX)$(UUT),0,$(TIMEOUT))REFRESH")
	field(DISV, "1")
	field(SDIS, "$(PFX)$(UUT):REFRESH:s")
	field(ZNAM, "0")
	field(ONAM, "1")

}

record(bi, "$(PFX)$(UUT):REFRESH:r") {
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PFX)$(UUT),0,$(TIMEOUT))REFRESHr")
	field(SCAN, "I/O Intr")
	field(FLNK, "$(PFX)$(UUT):REFRESH:s")
	field(ZNAM, "0")
	field(ONAM, "1")
}

record(bo, "$(PFX)$(UUT):REFRESH:s") {
	field(DTYP, "Soft Channel")
	field(OMSL, "closed_loop")
	field(DOL,  "$(PFX)$(UUT):REFRESH:r NPP")
	field(OUT,  "$(PFX)$(UUT):REFRESH PP")
	field(ZNAM, "0")
	field(ONAM, "1")
}


record(bo, "$(PFX)$(UUT):MMAPUNMAP") {
	field(DTYP, "Soft Channel")
	field(OUT,  "$(PFX)$(UUT):MMAPUNMAP:w PP")
	field(ZNAM, "UNMAP")
	field(ONAM, "MMAP")
}

record(bo, "$(PFX)$(UUT):MMAPUNMAP:w") {
	field(DTYP, "asynInt32")
	field(OUT,  "@asyn($(PFX)$(UUT),0,$(TIMEOUT))MMAPUNMAP")
	field(DISV, "1")
	field(SDIS, "$(PFX)$(UUT):MAPUNMAP:s")
	field(ZNAM, "UNMAP")
	field(ONAM, "MMAP")
}

record(bi, "$(PFX)$(UUT):MMAPUNMAP:r") {
	field(DTYP, "asynInt32")
	field(INP,  "@asyn($(PFX)$(UUT),0,$(TIMEOUT))MMAPUNMAPr")
	field(SCAN, "I/O Intr")
	field(FLNK, "$(PFX)$(UUT):MMAPUNMAP:s")
	field(ZNAM, "UNMAP")
	field(ONAM, "MMAP")
}

record(bo, "$(PFX)$(UUT):MMAPUNMAP:s") {
	field(DTYP, "Soft Channel")
	field(OMSL, "closed_loop")
	field(DOL,  "$(PFX)$(UUT):MMAPUNMAP:r NPP")
	field(OUT,  "$(PFX)$(UUT):MMAPUNMAP PP")
	field(ZNAM, "0")
	field(ONAM, "1")
}

record(longin, "$(PFX)$(UUT):NCHAN"){
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PFX)$(UUT),0,$(TIMEOUT))NCHAN")
}

record(longin, "$(PFX)$(UUT):NSAM"){
	field(DTYP, "asynInt32")
	field(INP, "@asyn($(PFX)$(UUT),0,$(TIMEOUT))NSAM")
}

record(longout, "$(PFX)$(UUT):STRIDE"){
	field(DTYP, "asynInt32")
	field(OUT, "@asyn($(PFX)$(UUT),0,$(TIMEOUT))STRIDE")
	field(DRVL, "1")
	field(DRVH, "200")
	field(VAL,  "1")
	field(PINI, "YES")
}

record(ao, "$(PFX)$(UUT):DELAY") {
	field(DTYP, "asynFloat64")
	field(OUT, "@asyn($(PFX)$(UUT),0,$(TIMEOUT))DELAY")
	field(DRVL, "0")
	field(DRVH, "10")
	field(VAL,  "0")
	field(PINI, "YES")
}

record(ao, "$(PFX)$(UUT):FS") {
	field(DTYP, "asynFloat64")
	field(OUT, "@asyn($(PFX)$(UUT),0,$(TIMEOUT))FS")
	field(DRVL, "1e3")
	field(DRVH, "80e6")
	field(VAL,  "2e6")
	field(PINI, "YES")
}

record(bo, "$(PFX)$(UUT):PAN_LEFT:1") {
	field(FLNK, "$(PFX)$(UUT):PAN_LEFT:1:c PP")
}

record(calcout, "$(PFX)$(UUT):PAN_LEFT:1:c") {
	field(INPA, "$(PFX)$(UUT):DELAY")
	field(CALC, "A-1")
	field(OOPT, "Every Time")
	field(DOPT, "Use CALC")
	field(OUT,  "$(PFX)$(UUT):DELAY PP")
	field(FLNK, "$(PFX)$(UUT):REFRESH PP")
}

record(bo, "$(PFX)$(UUT):PAN_RIGHT:1") {
	field(FLNK, "$(PFX)$(UUT):PAN_RIGHT:1:c PP")	
}

record(calcout, "$(PFX)$(UUT):PAN_RIGHT:1:c") {
	field(INPA, "$(PFX)$(UUT):DELAY")
	field(CALC, "A+1")
	field(OOPT, "Every Time")
	field(DOPT, "Use CALC")
	field(OUT,  "$(PFX)$(UUT):DELAY PP")
	field(FLNK, "$(PFX)$(UUT):REFRESH PP")
}

record(bo, "$(PFX)$(UUT):ZOOM:IN") {
	field(FLNK, "$(PFX)$(UUT):ZOOM:IN:c PP")
}

record(calcout, "$(PFX)$(UUT):ZOOM:IN:c") {
	field(INPA, "$(PFX)$(UUT):STRIDE")
	field(CALC, "A/2")
	field(OOPT, "Every Time")
	field(DOPT, "Use CALC")
	field(OUT,  "$(PFX)$(UUT):STRIDE PP")
	field(FLNK, "$(PFX)$(UUT):REFRESH PP")
}

record(bo, "$(PFX)$(UUT):ZOOM:OUT") {
	field(FLNK, "$(PFX)$(UUT):ZOOM:OUT:c PP")
}

record(calcout, "$(PFX)$(UUT):ZOOM:OUT:c") {
	field(INPA, "$(PFX)$(UUT):STRIDE")
	field(CALC, "A*2")
	field(OOPT, "Every Time")
	field(DOPT, "Use CALC")
	field(OUT,  "$(PFX)$(UUT):STRIDE PP")
	field(FLNK, "$(PFX)$(UUT):REFRESH PP")
}
